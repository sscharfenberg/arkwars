/***********************************************************************************************************************
 *
 * functions for use in other scss files (simple stuff)
 *
 **********************************************************************************************************************/
@import "config";

/*
 * Native `url(..)` function wrapper
 * @param {String} $base - base URL for the asset
 * @param {String} $type - asset type folder (e.g. `fonts/`)
 * @param {String} $path - asset path
 * @return {Url}
 */
@function asset($base, $type, $path) {
    @return url($base + $type + $path);
}

/*
 * Returns URL to an image based on its path
 * @param {String} $path - image path
 * @param {String} $base [$base-url] - base URL
 * @return {Url}
 * @require $base-url
 *
 */
@function image($path, $base: "./") {
    @return asset($base, "images/", $path);
}

/*
 * Returns URL to an icon based on its path
 * @param {String} $path - icon path
 * @param {String} $base [$base-url] - base URL
 * @return {Url}
 * @require $base-url
 *
 */
@function icon($path, $base: "./") {
    @return asset($base, "icons/", $path);
}

/*
 * Returns URL to a font based on its path
 * @param {String} $path - font path
 * @param {String} $base [$base-url] - base URL
 * @return {Url}
 * @require $base-url
 */
@function font($path, $base: "./") {
    @return asset($base, "fonts/", $path);
}

/*
 * color values from map in _config.scss
 * @usage:
 *
 * .link {
 *     color: palette("brand", "viking");
 * }
 */
@function palette($palette, $tone: "base") {
    @if map-has-key($palettes, $palette) {
        @return map-get(map-get($palettes, $palette), $tone);
    }
    @warn "Unknown `#{$palette}` in $palettes.";
    @return null;
}

/*
 * output z-index from map in _configl.scss
 * @usage:
 *
 * .overlay {
 *   z-index: z("overlay");
 * }
 */
@function z($key: "default") {
    @if map-has-key($z-layers, $key) {
        @return map-get($z-layers, $key);
    }
    @warn "Unknown `#{$key}` in $z-layers.";
    @return null;
}
